<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.interest.ids.commoninterface.dao.sm.RoleInfoMapper">
	<resultMap id="BaseResultMap" type="com.interest.ids.common.project.bean.sm.RoleInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="role_type" jdbcType="VARCHAR" property="roleType" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
		<result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
		<result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
		<result column="modify_user_id" jdbcType="BIGINT" property="modifyUserId" />
		<result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
	</resultMap>

	<resultMap type="com.interest.ids.common.project.bean.sm.RoleInfo"
		id="roleAndAuth" extends="BaseResultMap">
		<!-- <collection property="authorizeMs" column="id"
			select="com.interest.ids.commoninterface.dao.sm.AuthorizeMMapper.selectAuthByRoleId"></collection> -->
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, name, description, role_type, status, enterprise_id,
		create_user_id, create_date,
		modify_user_id, modify_date
	</sql>
	<select id="selectRoleByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from ids_sm_role_info_t
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteRoleByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from ids_sm_role_info_t
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<update id="updateRoleByPrimaryKeySelective" parameterType="com.interest.ids.common.project.bean.sm.RoleInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update ids_sm_role_info_t
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="enterpriseId != null">
				enterprise_id = #{enterpriseId,jdbcType=BIGINT},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyUserId != null">
				modify_user_id = #{modifyUserId,jdbcType=BIGINT},
			</if>
			<if test="modifyDate != null">
				modify_date = #{modifyDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByRolePrimaryKey" parameterType="com.interest.ids.common.project.bean.sm.RoleInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update ids_sm_role_info_t
		set name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		role_type = #{roleType,jdbcType=VARCHAR},
		status = #{status,jdbcType=TINYINT},
		enterprise_id = #{enterpriseId,jdbcType=BIGINT},
		create_user_id = #{createUserId,jdbcType=BIGINT},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		modify_user_id = #{modifyUserId,jdbcType=BIGINT},
		modify_date = #{modifyDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 添加角色信息 -->
	<insert id="insertRole" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.interest.ids.common.project.bean.sm.RoleInfo">
		insert into ids_sm_role_info_t (name, description, role_type, status,
		enterprise_id, create_user_id, create_date,
		modify_user_id, modify_date) values
		(#{name},#{description},#{roleType},#{status},#{enterpriseId},#{createUserId},#{createDate},#{modifyUserId},#{modifyDate})
	</insert>

	<!-- 禁用和启用角色信息 -->
	<update id="updateRoleMStatus" parameterType="com.interest.ids.common.project.bean.sm.RoleInfo">
		update ids_sm_role_info_t set status = #{status,jdbcType=TINYINT} where id =
		#{id,jdbcType=BIGINT}
	</update>

	<!-- 用户和权限一对多关联查询/根据用户id查询所有的角色 -->
	<select id="selectRolesByUserId" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
			id, name,description
		from ids_sm_role_info_t role
		<choose>
			<when test="type_ == 'system' and null != isLogin and isLogin">
				WHERE id = 1
			</when>
			<when test="type_ == 'enterprise' and null != isLogin and isLogin">
				where id = 2
			</when>
			<when test="type_ == 'enterprise' || type_ == 'system'">
				where enterprise_id = #{enterpriseId}
			</when>
			<otherwise>
				,ids_sm_user_role_t user_role
				where role.id = user_role.role_id and user_role.user_id = #{id}
			</otherwise>
		</choose>

	</select>

	<!-- 添加角色的权限 -->
	<insert id="insertRoleAuthorizeM"
		parameterType="com.interest.ids.common.project.bean.sm.RoleMAuthorizeM">
		insert into ids_sm_role_auth_t (role_id,auth_id) values(#{roleId},#{authId})
	</insert>

	<!-- 删除角色下的所有权限 -->
	<delete id="deleteRoleAuthorizeM" parameterType="java.lang.Long">
		delete from ids_sm_role_auth_t where role_id = #{value}
	</delete>

	<!-- 分页查询角色 -->
	<select id="selectRoleMByPage" parameterType="com.interest.ids.common.project.bean.sm.QueryRole"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ids_sm_role_info_t
		<where>
			<if test="role.name != null and role.name != '' ">
				and name LIKE '%${role.name}%'
			</if>
			<if test="role.description != null and role.description != '' ">
				and description like '%${role.description}%'
			</if>
			<if test="role.roleType != null and role.roleType != '' ">
				and role_type = #{role.roleType,jdbcType=VARCHAR}
			</if>
			<if test="role.status != null ">
				and status = #{role.status,jdbcType=TINYINT}
			</if>
			<if test="role.enterpriseId != null ">
				and enterprise_id = #{role.enterpriseId,jdbcType=BIGINT}
			</if>
			<if test="role.createUserId != null">
				and create_user_id = #{role.createUserId,jdbcType=BIGINT}
			</if>
			<if test="startTime != null ">
				and create_date <![CDATA[ >= ]]>
				#{startTime}
			</if>
			<if test="endTime != null">
				and create_date <![CDATA[ <= ]]>
				#{endTime}
			</if>
			<if test="role.modifyUserId != null and role.modifyUserId != '' ">
				and modify_user_id = #{role.modifyUserId,jdbcType=BIGINT}
			</if>
			<if test="role.modifyDate != null">
				and modify_date = #{role.modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="type_ == 'enterprise'">
				and enterprise_id = (select enterprise_id from ids_sm_user_info_t where id =
				#{userId})
			</if>
			<if test="type_ == 'normal'">
				and id in (select role_id from ids_sm_user_role_t where user_id =
				#{userId})
			</if>
		</where>
		limit #{page.start},#{page.pageSize}
	</select>
	<!-- 查询数据总条数 -->
	<select id="selectAllCount" parameterType="com.interest.ids.common.project.bean.sm.QueryRole"
		resultType="java.lang.Integer">
		select count(*) from ids_sm_role_info_t
		<where>
			<if test="role.name != null and role.name != '' ">
				and name LIKE '%${role.name}%'
			</if>
			<if test="role.description != null and role.description != '' ">
				and description like '%${role.description}%'
			</if>
			<if test="role.roleType != null and role.roleType != '' ">
				and role_type = #{role.roleType,jdbcType=VARCHAR}
			</if>
			<if test="role.status != null ">
				and status = #{role.status,jdbcType=TINYINT}
			</if>
			<if test="role.enterpriseId != null ">
				and enterprise_id = #{role.enterpriseId,jdbcType=BIGINT}
			</if>
			<if test="role.createUserId != null">
				and create_user_id = #{role.createUserId,jdbcType=BIGINT}
			</if>
			<if test="startTime != null ">
				and create_date <![CDATA[ >= ]]>
				#{startTime}
			</if>
			<if test="endTime != null">
				and create_date <![CDATA[ <= ]]>
				#{endTime}
			</if>
			<if test="role.modifyUserId != null and role.modifyUserId != '' ">
				and modify_user_id = #{role.modifyUserId,jdbcType=BIGINT}
			</if>
			<if test="role.modifyDate != null">
				and modify_date = #{role.modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="type_ != 'system'">
				and enterprise_id = (select enterprise_id from ids_sm_user_info_t where id =
				#{userId})
			</if>
		</where>
	</select>

	<!--根据角色id统计当前角色下的用户 -->
	<select id="selectUserCountByRoleId" parameterType="java.lang.Long"
		resultType="java.lang.String">
		select
		user.login_name
		from
		ids_sm_role_info_t role ,
		ids_sm_user_role_t user_role,
		ids_sm_user_info_t user
		where
		role.id = user_role.role_id
		and user.id = user_role.user_id
		and user_role.role_id = #{value}
	</select>
	
	<!-- 根据企业id查询所有的角色 -->
	<select id="selectRoleByEnterpriseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from ids_sm_role_info_t where enterprise_id = #{value} or id = 3
	</select>
</mapper>